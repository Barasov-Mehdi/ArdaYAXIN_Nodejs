<!DOCTYPE html>
<html lang="tr">

<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>Qiymət təyin etmə səhifəsi</title>
<!-- Google Fonts - Modern ve okunabilir font -->
<link href="https://fonts.googleapis.com/css2?family=Open+Sans&display=swap" rel="stylesheet" />
<style>
  body {
    font-family: 'Open Sans', sans-serif;
    background-color: #f4f4f9;
    color: #333;
    margin: 0;
    padding: 0;
  }

  h1 {
    text-align: center;
    background-color: #4CAF50;
    color: white;
    padding: 20px 0;
    margin-bottom: 20px;
  }

  .container {
    width: 90%;
    max-width: 1000px;
    margin: 0 auto;
  }

  /* Kartlar veya bölümler */
  .section {
    background-color: #ffffff;
    padding: 20px;
    margin-bottom: 20px;
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
  }

  h2 {
    margin-top: 0;
    color: #333;
    margin-bottom: 15px;
  }

  /* Tablo stili */
  table {
    width: 100%;
    border-collapse: collapse;
  }

  thead {
    background-color: #f0f0f0;
  }

  th, td {
    border: 1px solid #ddd;
    padding: 12px;
    text-align: center;
  }

  th {
    background-color: #eee;
    font-weight: 600;
  }

  /* Butonlar */
  button {
    padding: 8px 12px;
    margin: 0 5px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-weight: 600;
    transition: all 0.3s ease;
  }

  /* Sil butonu */
  button:nth-child(1) {
    background-color: #e74c3c;
    color: #fff;
  }
  button:nth-child(1):hover {
    background-color: #c0392b;
  }
  /* Güncelle butonu */
  button:nth-child(2) {
    background-color: #2980b9;
    color: #fff;
  }
  button:nth-child(2):hover {
    background-color: #2471a3;
  }

  /* Form ve input */
  form {
    display: flex;
    flex-direction: column;
    gap: 10px;
  }
  input {
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 4px;
    font-size: 1em;
  }

  /* Ekle ve Güncelle Butonları */
  .btn-primary {
    background-color: #27ae60;
    color: white;
  }
  .btn-primary:hover {
    background-color: #1e8449;
  }

  /* Güncelleme bölümü */
  #updateSection {
    display: none;
  }

  /* İyi bir görünüm için küçük düzenlemeler */
  .button-container {
    display: flex;
    justify-content: center;
    margin-top: 10px;
  }
</style>
</head>

<body>
<h1>Qiymət təyin etmə səhifəsi</h1>
<div class="container">

  <!-- Mevcut Fiyat Katmanları -->
  <div class="section">
    <h2>Hazırki qiymətlər</h2>
    <table>
      <thead>
        <tr>
          <th>ID</th>
          <th>Kilometr</th>
          <th>Qiymət</th>
          <th>Funsiya</th>
        </tr>
      </thead>
      <tbody>
        <% tiers.forEach(function(tier) { %>
        <tr>
          <td><%= tier._id %></td>
          <td><%= tier.maxKm %></td>
          <td><%= tier.price %></td>
          <td class="button-container">
            <button onclick="deleteTier('<%= tier._id %>')">Sil</button>
            <button onclick="showUpdateForm('<%= tier._id %>', '<%= tier.maxKm %>', '<%= tier.price %>')">Yenilə</button>
          </td>
        </tr>
        <% }) %>
      </tbody>
    </table>
  </div>

  <!-- Yeni Fiyat Katmanı Ekle -->
  <div class="section">
    <h2>Yeni Qiymət Əlavə et</h2>
    <form id="addForm" onsubmit="return false;">
      <input type="number" id="maxKm" placeholder="Max Km" required />
      <input type="number" id="price" placeholder="Price" required />
      <div class="button-container">
        <button class="btn-primary" onclick="addTier()">Əlavə et</button>
      </div>
    </form>
  </div>

  <!-- Güncelleme Bölümü -->
  <div class="section" id="updateSection">
    <h2>Qiyməti Yenilə</h2>
    <form id="updateForm" onsubmit="return false;">
      <input type="hidden" id="updateId" />
      <input type="number" id="updateMaxKm" placeholder="Max Km" required />
      <input type="number" id="updatePrice" placeholder="Price" required />
      <div class="button-container">
        <button class="btn-primary" onclick="updateTier()">Yenilə</button>
        <button onclick="hideUpdateForm()">Ləvğ et</button>
      </div>
    </form>
  </div>
</div>

<script>
const apiBase = '/api/pricetiers';

// Ekleme fonksiyonu
async function addTier() {
  const maxKm = document.getElementById('maxKm').value;
  const price = document.getElementById('price').value;
  try {
    const response = await fetch(apiBase, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ maxKm: Number(maxKm), price: Number(price) })
    });
    if (response.ok) {
      alert('Yeni fiyat katmanı eklendi.');
      location.reload();
    } else {
      const errorData = await response.json();
      alert('Ekleme başarısız: ' + (errorData.msg || response.status));
    }
  } catch (err) {
    alert('Hata oluştu: ' + err);
  }
}

// Silme fonksiyonu
async function deleteTier(id) {
  if (!confirm('Silmek istediğinize emin misiniz?')) return;
  try {
    const response = await fetch(`${apiBase}/${id}`, {
      method: 'DELETE'
    });
    if (response.ok) {
      alert('Silindi.');
      location.reload();
    } else {
      const errorData = await response.json();
      alert('Silme başarısız: ' + (errorData.msg || response.status));
    }
  } catch (err) {
    alert('Hata: ' + err);
  }
}

// Güncelleme formunu göster
function showUpdateForm(id, maxKm, price) {
  document.getElementById('updateSection').style.display = 'block';
  document.getElementById('updateId').value = id;
  document.getElementById('updateMaxKm').value = maxKm;
  document.getElementById('updatePrice').value = price;
}

// Güncelleme formunu gizle
function hideUpdateForm() {
  document.getElementById('updateSection').style.display = 'none';
}

// Güncelleme
async function updateTier() {
  const id = document.getElementById('updateId').value;
  const maxKm = document.getElementById('updateMaxKm').value;
  const price = document.getElementById('updatePrice').value;
  try {
    const response = await fetch(`${apiBase}/${id}`, {
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ maxKm: Number(maxKm), price: Number(price) })
    });
    if (response.ok) {
      alert('Güncelleme başarılı.');
      location.reload();
    } else {
      const errorData = await response.json();
      alert('Güncelleme başarısız: ' + (errorData.msg || response.status));
    }
  } catch (err) {
    alert('Hata: ' + err);
  }
}
</script>
</body>
</html>